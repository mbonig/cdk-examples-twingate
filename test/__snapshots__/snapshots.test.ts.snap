// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Basic Snapshot 1`] = `
{
  "Outputs": {
    "TwingateConnectorTwingateConnectorSecretNameOutput008BB3B7E": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecretNameOutput1AADE8123": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecurityGroupNameOutputD69187D2": {
      "Value": {
        "Fn::GetAtt": [
          "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "TwingateConnectorMaintenanceWindowTarget0BEAD534A": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTarget14312CDFE": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTask03A9214A7": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole01CBF38CC",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-0",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole01CBF38CC",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorMaintenanceWindowTask1C096C2C3": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole192038A9B",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-1",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole192038A9B",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorSSMRole01CBF38CC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole0DefaultPolicy55B1005E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole0DefaultPolicy55B1005E",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole01CBF38CC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorSSMRole192038A9B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole192038A9B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorInstance0E1330664": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "t3a.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-0",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorInstance13EC7918A": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "t3a.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-1",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorSecret0E4329B38": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSecret136976460": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C": {
      "Properties": {
        "GroupDescription": "test/TwingateConnector/TwingateConnectorSharedConstruct/ConnectorSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TwingateConnectorTwingateConnectorSharedConstructPatchDocument5C55E34C": {
      "Properties": {
        "Content": {
          "description": "Install packages from Ubuntu repositories",
          "mainSteps": [
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get update",
                ],
              },
              "name": "updatePackages",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get install -y twingate-connector",
                ],
              },
              "name": "updateTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo systemctl restart twingate-connector",
                ],
              },
              "name": "restartTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo reboot",
                ],
              },
              "name": "reboot",
              "precondition": {
                "StringEquals": [
                  "{{ reboot }}",
                  "true",
                ],
              },
            },
          ],
          "parameters": {
            "reboot": {
              "allowedValues": [
                "true",
                "false",
              ],
              "type": "String",
            },
          },
          "schemaVersion": "2.2",
        },
        "DocumentFormat": "JSON",
        "DocumentType": "Command",
        "Name": "TwingateUpdate",
        "TargetType": "/AWS::EC2::Instance",
      },
      "Type": "AWS::SSM::Document",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "sns:Publish",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingateConnectorInstanceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:Decrypt",
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateMaintenanceWindow05A6CB287": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-0",
        "Schedule": "cron(0 0 03 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "TwingateConnectorTwingateMaintenanceWindow177A96944": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-1",
        "Schedule": "cron(0 0 13 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`TwingateConnector Basic Snapshot 1`] = `
{
  "Outputs": {
    "TwingateConnectorTwingateConnectorSecretNameOutput008BB3B7E": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecretNameOutput1AADE8123": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecurityGroupNameOutputD69187D2": {
      "Value": {
        "Fn::GetAtt": [
          "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "TwingateConnectorMaintenanceWindowTarget0BEAD534A": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTarget14312CDFE": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTask03A9214A7": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole01CBF38CC",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-0",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole01CBF38CC",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorMaintenanceWindowTask1C096C2C3": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole192038A9B",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-1",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole192038A9B",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorSSMRole01CBF38CC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole0DefaultPolicy55B1005E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole0DefaultPolicy55B1005E",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole01CBF38CC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorSSMRole192038A9B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole192038A9B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorInstance0E1330664": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "t3a.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-0",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorInstance13EC7918A": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "t3a.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-1",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorSecret0E4329B38": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSecret136976460": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C": {
      "Properties": {
        "GroupDescription": "test/TwingateConnector/TwingateConnectorSharedConstruct/ConnectorSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TwingateConnectorTwingateConnectorSharedConstructPatchDocument5C55E34C": {
      "Properties": {
        "Content": {
          "description": "Install packages from Ubuntu repositories",
          "mainSteps": [
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get update",
                ],
              },
              "name": "updatePackages",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get install -y twingate-connector",
                ],
              },
              "name": "updateTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo systemctl restart twingate-connector",
                ],
              },
              "name": "restartTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo reboot",
                ],
              },
              "name": "reboot",
              "precondition": {
                "StringEquals": [
                  "{{ reboot }}",
                  "true",
                ],
              },
            },
          ],
          "parameters": {
            "reboot": {
              "allowedValues": [
                "true",
                "false",
              ],
              "type": "String",
            },
          },
          "schemaVersion": "2.2",
        },
        "DocumentFormat": "JSON",
        "DocumentType": "Command",
        "Name": "TwingateUpdate",
        "TargetType": "/AWS::EC2::Instance",
      },
      "Type": "AWS::SSM::Document",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "sns:Publish",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingateConnectorInstanceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:Decrypt",
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateMaintenanceWindow05A6CB287": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-0",
        "Schedule": "cron(0 0 03 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "TwingateConnectorTwingateMaintenanceWindow177A96944": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-1",
        "Schedule": "cron(0 0 13 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`TwingateConnector More connectors 1`] = `
{
  "Outputs": {
    "TwingateConnectorTwingateConnectorSecretNameOutput008BB3B7E": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecretNameOutput1AADE8123": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecretNameOutput27838800F": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecurityGroupNameOutputD69187D2": {
      "Value": {
        "Fn::GetAtt": [
          "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "TwingateConnectorMaintenanceWindowTarget0BEAD534A": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTarget14312CDFE": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTarget2BAB75373": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance23729C22D",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow2949D1E4E",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTask03A9214A7": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole01CBF38CC",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-0",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole01CBF38CC",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorMaintenanceWindowTask1C096C2C3": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole192038A9B",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-1",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole192038A9B",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorMaintenanceWindowTask2C2036225": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole252426418",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance23729C22D",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-2",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole252426418",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow2949D1E4E",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorSSMRole01CBF38CC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole0DefaultPolicy55B1005E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole0DefaultPolicy55B1005E",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole01CBF38CC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorSSMRole192038A9B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole192038A9B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorSSMRole252426418": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole2DefaultPolicy04BB725D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole2DefaultPolicy04BB725D",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole252426418",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorInstance0E1330664": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "t3a.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-0",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorInstance13EC7918A": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "t3a.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-1",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorInstance23729C22D": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance2InstanceProfile2942517E",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "t3a.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-2",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance2InstanceProfile2942517E": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorSecret0E4329B38": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSecret136976460": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSecret2469C01E1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C": {
      "Properties": {
        "GroupDescription": "test/TwingateConnector/TwingateConnectorSharedConstruct/ConnectorSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TwingateConnectorTwingateConnectorSharedConstructPatchDocument5C55E34C": {
      "Properties": {
        "Content": {
          "description": "Install packages from Ubuntu repositories",
          "mainSteps": [
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get update",
                ],
              },
              "name": "updatePackages",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get install -y twingate-connector",
                ],
              },
              "name": "updateTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo systemctl restart twingate-connector",
                ],
              },
              "name": "restartTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo reboot",
                ],
              },
              "name": "reboot",
              "precondition": {
                "StringEquals": [
                  "{{ reboot }}",
                  "true",
                ],
              },
            },
          ],
          "parameters": {
            "reboot": {
              "allowedValues": [
                "true",
                "false",
              ],
              "type": "String",
            },
          },
          "schemaVersion": "2.2",
        },
        "DocumentFormat": "JSON",
        "DocumentType": "Command",
        "Name": "TwingateUpdate",
        "TargetType": "/AWS::EC2::Instance",
      },
      "Type": "AWS::SSM::Document",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "sns:Publish",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingateConnectorInstanceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:Decrypt",
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateMaintenanceWindow05A6CB287": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-0",
        "Schedule": "cron(0 0 03 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "TwingateConnectorTwingateMaintenanceWindow177A96944": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-1",
        "Schedule": "cron(0 0 13 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "TwingateConnectorTwingateMaintenanceWindow2949D1E4E": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-2",
        "Schedule": "cron(0 0 23 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`TwingateConnector Overridden instance types 1`] = `
{
  "Outputs": {
    "TwingateConnectorTwingateConnectorSecretNameOutput008BB3B7E": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecretNameOutput1AADE8123": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecretNameOutput27838800F": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "TwingateConnectorTwingateConnectorSecurityGroupNameOutputD69187D2": {
      "Value": {
        "Fn::GetAtt": [
          "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "TwingateConnectorMaintenanceWindowTarget0BEAD534A": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTarget14312CDFE": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTarget2BAB75373": {
      "Properties": {
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance23729C22D",
              },
            ],
          },
        ],
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow2949D1E4E",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTarget",
    },
    "TwingateConnectorMaintenanceWindowTask03A9214A7": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole01CBF38CC",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance0E1330664",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-0",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole01CBF38CC",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow05A6CB287",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorMaintenanceWindowTask1C096C2C3": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole192038A9B",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance13EC7918A",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-1",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole192038A9B",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow177A96944",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorMaintenanceWindowTask2C2036225": {
      "Properties": {
        "MaxConcurrency": "2",
        "MaxErrors": "1",
        "Priority": 1,
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "TwingateConnectorSSMRole252426418",
            "Arn",
          ],
        },
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "TwingateConnectorTwingateConnectorInstance23729C22D",
              },
            ],
          },
        ],
        "TaskArn": "TwingateUpdate",
        "TaskInvocationParameters": {
          "MaintenanceWindowRunCommandParameters": {
            "CloudWatchOutputConfig": {
              "CloudWatchLogGroupName": "TwingateConnectorMaintenanceWindow-2",
              "CloudWatchOutputEnabled": true,
            },
            "Comment": "Twingate Connector Patching",
            "Parameters": {
              "reboot": [
                "true",
              ],
            },
            "ServiceRoleArn": {
              "Fn::GetAtt": [
                "TwingateConnectorSSMRole252426418",
                "Arn",
              ],
            },
            "TimeoutSeconds": 600,
          },
        },
        "TaskType": "RUN_COMMAND",
        "WindowId": {
          "Ref": "TwingateConnectorTwingateMaintenanceWindow2949D1E4E",
        },
      },
      "Type": "AWS::SSM::MaintenanceWindowTask",
    },
    "TwingateConnectorSSMRole01CBF38CC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole0DefaultPolicy55B1005E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole0DefaultPolicy55B1005E",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole01CBF38CC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorSSMRole192038A9B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole1DefaultPolicyFBC4E0A0",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole192038A9B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorSSMRole252426418": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "ssm.amazonaws.com",
                      ],
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "resource-groups:ListGroupResources",
                    "resource-groups:ListGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingatePatchManager",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorSSMRole2DefaultPolicy04BB725D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorSSMRole2DefaultPolicy04BB725D",
        "Roles": [
          {
            "Ref": "TwingateConnectorSSMRole252426418",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorInstance0E1330664": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "m5a.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-0",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance0InstanceProfile5A8B4BCC": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorInstance13EC7918A": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "m5a.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-1",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance1InstanceProfile18A0D97D": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorInstance23729C22D": {
      "DependsOn": [
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "TwingateConnectorTwingateConnectorInstance2InstanceProfile2942517E",
        },
        "ImageId": "ami-0cdbb12f99c43b027",
        "InstanceType": "m5a.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/TwingateConnector/TwingateConnectorInstance-2",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash

apt update -y
apt install jq unzip -y
cd /tmp
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
sudo mkdir -p /etc/twingate/

### Install Connector
SECRET_ID="",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "-",
                              {
                                "Fn::Select": [
                                  6,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                ""

TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')

# Check if TWINGATE_ACCESS_TOKEN or TWINGATE_REFRESH_TOKEN is empty
while [[ "$TWINGATE_ACCESS_TOKEN" == "null" || "$TWINGATE_REFRESH_TOKEN" == "null" ]]; do
  echo "Keep looking up secret until we get the access token and refresh token"
  export TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
  export TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
  sleep 30s
done


HOSTNAME_LOOKUP=$(curl http://169.254.169.254/latest/meta-data/local-hostname)
{
echo TWINGATE_URL=https://some-test-url.twingate.com
echo TWINGATE_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateAccessToken')
echo TWINGATE_REFRESH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query SecretString --output text | jq -r '.twingateRefreshToken')
echo TWINGATE_LABEL_HOSTNAME=$HOSTNAME_LOOKUP
} > /etc/twingate/connector.conf

sudo systemctl enable --now twingate-connector
echo "completed userdata"
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TwingateConnectorTwingateConnectorInstance2InstanceProfile2942517E": {
      "Properties": {
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TwingateConnectorTwingateConnectorSecret0E4329B38": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSecret136976460": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSecret2469C01E1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "twingateAccessToken",
          "SecretStringTemplate": "{"twingateAccessToken":""}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateConnectorSharedConstructConnectorSecurityGroupBC26E98C": {
      "Properties": {
        "GroupDescription": "test/TwingateConnector/TwingateConnectorSharedConstruct/ConnectorSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TwingateConnectorTwingateConnectorSharedConstructPatchDocument5C55E34C": {
      "Properties": {
        "Content": {
          "description": "Install packages from Ubuntu repositories",
          "mainSteps": [
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get update",
                ],
              },
              "name": "updatePackages",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo apt-get install -y twingate-connector",
                ],
              },
              "name": "updateTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo systemctl restart twingate-connector",
                ],
              },
              "name": "restartTwingate",
            },
            {
              "action": "aws:runShellScript",
              "inputs": {
                "runCommand": [
                  "sudo reboot",
                ],
              },
              "name": "reboot",
              "precondition": {
                "StringEquals": [
                  "{{ reboot }}",
                  "true",
                ],
              },
            },
          ],
          "parameters": {
            "reboot": {
              "allowedValues": [
                "true",
                "false",
              ],
              "type": "String",
            },
          },
          "schemaVersion": "2.2",
        },
        "DocumentFormat": "JSON",
        "DocumentType": "Command",
        "Name": "TwingateUpdate",
        "TargetType": "/AWS::EC2::Instance",
      },
      "Type": "AWS::SSM::Document",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation",
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "sns:Publish",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TwingateConnectorInstanceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret0E4329B38",
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret136976460",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TwingateConnectorTwingateConnectorSecret2469C01E1",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleDefaultPolicy56C3E1B3",
        "Roles": [
          {
            "Ref": "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TwingateConnectorTwingateConnectorSharedConstructTwingateEncryptionKey2E628261": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:Decrypt",
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "TwingateConnectorTwingateConnectorSharedConstructTwingateConnectorInstanceRoleB7CFE498",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "TwingateConnectorTwingateMaintenanceWindow05A6CB287": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-0",
        "Schedule": "cron(0 0 03 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "TwingateConnectorTwingateMaintenanceWindow177A96944": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-1",
        "Schedule": "cron(0 0 13 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "TwingateConnectorTwingateMaintenanceWindow2949D1E4E": {
      "Properties": {
        "AllowUnassociatedTargets": false,
        "Cutoff": 0,
        "Description": "Twingate Connector Maintenance Window",
        "Duration": 1,
        "Name": "TwingateMaintenanceWindow-2",
        "Schedule": "cron(0 0 23 ? * SAT *)",
        "ScheduleTimezone": "America/New_York",
      },
      "Type": "AWS::SSM::MaintenanceWindow",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
